name: Update Submodules
on:
  push:
    branches: [ dev ]
  schedule:
    - cron: '0 0 * * *'  # Corrected cron syntax

jobs:
  check_submodules:
    name: Check Submodules
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          submodules: 'recursive'  # Check out submodules recursively

      - name: Update Submodules
        run: |
          git submodule update --recursive --remote

      - name: Check for changes
        id: check
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  update_submodules:
    name: Update Submodules
    runs-on: ubuntu-latest
    needs: [check_submodules]
    if: needs.check_submodules.outputs.has_changes == 'true'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Update Submodules
        run: |
          git submodule update --recursive --remote

      - name: Setup Python 3.10.4
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.4'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.2

      - name: Install Dependencies
        run: |
          poetry install --no-root

      - name: Update Submodule
        run: |
          poetry run datamodel-codegen --input ./compose-spec/schema/compose-spec.json --output-model-type pydantic_v2.BaseModel --field-constraints --output ./compose_viz/spec/compose_spec.py
          poetry run python ./update-submodules.py

      - name: Execute pre-commit
        continue-on-error: true
        run: |
          poetry run python -m pre_commit run --all-files

      - name: Push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b update-submodules-${{ github.run_id }}
          git add .
          git commit -m "chore: update submodules"
          git push --set-upstream origin update-submodules-${{ github.run_id }}

      - name: File PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'update-submodules-${{ github.run_id }}',
              base: 'dev',
              title: `chore: update submodules (${{ github.run_id }})`,
              body: `Please add the version tag to trigger the release.`,
            });
